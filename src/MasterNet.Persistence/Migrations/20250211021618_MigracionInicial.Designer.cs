// <auto-generated />
using System;
using MasterNet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet.Persistence.Migrations
{
    [DbContext(typeof(MasterNetDbContext))]
    [Migration("20250211021618_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alumno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Puntaje")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a9fbb2f7-a852-4747-916a-343439ba1083"),
                            Descripcion = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            FechaPublicacion = new DateTime(2025, 2, 11, 2, 16, 18, 427, DateTimeKind.Utc).AddTicks(6676),
                            Titulo = "Awesome Soft Car"
                        },
                        new
                        {
                            Id = new Guid("c8568abf-282e-47bc-8962-d6fec83d3ba9"),
                            Descripcion = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            FechaPublicacion = new DateTime(2025, 2, 11, 2, 16, 18, 427, DateTimeKind.Utc).AddTicks(6712),
                            Titulo = "Awesome Granite Towels"
                        },
                        new
                        {
                            Id = new Guid("c5ec77c1-7060-4cf4-90cc-084332783460"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2025, 2, 11, 2, 16, 18, 427, DateTimeKind.Utc).AddTicks(6739),
                            Titulo = "Unbranded Soft Chips"
                        },
                        new
                        {
                            Id = new Guid("f18713dc-2517-4aa3-8207-2ae4c926fe9b"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2025, 2, 11, 2, 16, 18, 427, DateTimeKind.Utc).AddTicks(6763),
                            Titulo = "Handmade Metal Ball"
                        },
                        new
                        {
                            Id = new Guid("7fec7e22-573a-4d52-a6d5-ecbf33c56bd9"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2025, 2, 11, 2, 16, 18, 427, DateTimeKind.Utc).AddTicks(6786),
                            Titulo = "Awesome Wooden Bacon"
                        },
                        new
                        {
                            Id = new Guid("5e89472d-e17f-4de3-b886-f8f662346297"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2025, 2, 11, 2, 16, 18, 427, DateTimeKind.Utc).AddTicks(6805),
                            Titulo = "Unbranded Steel Towels"
                        },
                        new
                        {
                            Id = new Guid("12276bb0-ae4d-4d70-a412-99b132a859b3"),
                            Descripcion = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            FechaPublicacion = new DateTime(2025, 2, 11, 2, 16, 18, 427, DateTimeKind.Utc).AddTicks(6829),
                            Titulo = "Incredible Rubber Pizza"
                        },
                        new
                        {
                            Id = new Guid("e48c4d19-3e22-4fef-9b05-30b547096fee"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2025, 2, 11, 2, 16, 18, 427, DateTimeKind.Utc).AddTicks(6910),
                            Titulo = "Practical Rubber Shirt"
                        },
                        new
                        {
                            Id = new Guid("64eaecce-b0c1-42ca-8b10-bb591e62357f"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2025, 2, 11, 2, 16, 18, 427, DateTimeKind.Utc).AddTicks(6933),
                            Titulo = "Ergonomic Plastic Fish"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("curso_instructores", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid>("PrecioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_precios", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f04df07d-78bb-464a-b02e-9f8488b9441b"),
                            Apellido = "Beier",
                            Grado = "Corporate Operations Producer",
                            Nombre = "Lolita"
                        },
                        new
                        {
                            Id = new Guid("b512dc19-b45c-40a4-9683-fb6421e08694"),
                            Apellido = "Connelly",
                            Grado = "Dynamic Configuration Director",
                            Nombre = "Josie"
                        },
                        new
                        {
                            Id = new Guid("5a135fbc-08cd-4936-98cb-893a2d687483"),
                            Apellido = "Waelchi",
                            Grado = "Principal Metrics Supervisor",
                            Nombre = "Uriel"
                        },
                        new
                        {
                            Id = new Guid("7c620a3f-0a0d-4c0f-bd39-7ae5cc4a001b"),
                            Apellido = "Ward",
                            Grado = "International Usability Agent",
                            Nombre = "Forest"
                        },
                        new
                        {
                            Id = new Guid("6f883bb4-d93e-40c3-8594-ff9afbdb9432"),
                            Apellido = "Stoltenberg",
                            Grado = "Dynamic Implementation Liaison",
                            Nombre = "Alexa"
                        },
                        new
                        {
                            Id = new Guid("9498e72b-7a21-46f0-8190-560afedd1124"),
                            Apellido = "Lebsack",
                            Grado = "Product Usability Liaison",
                            Nombre = "Davin"
                        },
                        new
                        {
                            Id = new Guid("67faafb7-5194-40b8-b7cd-50ae4716904f"),
                            Apellido = "Howe",
                            Grado = "Chief Interactions Associate",
                            Nombre = "Rosalyn"
                        },
                        new
                        {
                            Id = new Guid("b0dcedbd-852a-4ed4-8439-12abc20f257c"),
                            Apellido = "Labadie",
                            Grado = "Customer Solutions Liaison",
                            Nombre = "Albina"
                        },
                        new
                        {
                            Id = new Guid("01b20b2f-1f47-46dc-b3c3-2d192c95e637"),
                            Apellido = "Leffler",
                            Grado = "Senior Tactics Assistant",
                            Nombre = "Novella"
                        },
                        new
                        {
                            Id = new Guid("c030bd34-8676-4c95-98a1-fb3e9f50a412"),
                            Apellido = "Jones",
                            Grado = "International Security Assistant",
                            Nombre = "Paige"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b5a2108-6f61-4dae-8477-08f53d7af540"),
                            Nombre = "Precio Regular",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Photos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstructores");
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
